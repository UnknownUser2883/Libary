local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Screen GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FancyUILibrary"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.Visible = false
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

Instance.new("UICorner", mainFrame)
local mainStroke = Instance.new("UIStroke", mainFrame)
mainStroke.Color = Color3.fromRGB(100, 100, 100)
mainStroke.Thickness = 2

-- Title Label
local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Text = "Fancy UI"
titleLabel.TextStrokeTransparency = 0.75

-- Loading Frame
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(0, 300, 0, 100)
loadingFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
loadingFrame.AnchorPoint = Vector2.new(0.5, 0.5)
loadingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
loadingFrame.BorderSizePixel = 0
loadingFrame.Parent = screenGui

Instance.new("UICorner", loadingFrame)
local loadingStroke = Instance.new("UIStroke", loadingFrame)
loadingStroke.Color = Color3.fromRGB(80, 80, 80)
loadingStroke.Thickness = 2

local loadingText = Instance.new("TextLabel", loadingFrame)
loadingText.Size = UDim2.new(1, 0, 1, 0)
loadingText.Text = "Loading..."
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 22
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.BackgroundTransparency = 1

-- Animate loading frame
TweenService:Create(loadingFrame, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
	Size = UDim2.new(0, 350, 0, 120),
	BackgroundColor3 = Color3.fromRGB(30, 30, 30)
}):Play()

task.delay(2.5, function()
	loadingFrame:TweenPosition(UDim2.new(0.5, 0, -1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
	task.delay(1, function()
		loadingFrame.Visible = false
		mainFrame.Visible = true
	end)
end)

-- Tab holder on the left
local tabHolder = Instance.new("Frame", mainFrame)
tabHolder.Size = UDim2.new(0, 120, 1, -40)
tabHolder.Position = UDim2.new(0, 0, 0, 40)
tabHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", tabHolder)
Instance.new("UIStroke", tabHolder).Color = Color3.fromRGB(70, 70, 70)

local tabLayout = Instance.new("UIListLayout", tabHolder)
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 5)

-- Content frame on right
local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Size = UDim2.new(1, -130, 1, -50)
contentFrame.Position = UDim2.new(0, 130, 0, 40)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Instance.new("UICorner", contentFrame)
Instance.new("UIStroke", contentFrame).Color = Color3.fromRGB(80, 80, 80)

-- Tabs system
local Tabs = {}

function Tabs:SetTitle(newTitle)
	titleLabel.Text = newTitle or titleLabel.Text
end

function Tabs:AddTab(tabName)
	local tabBtn = Instance.new("TextButton", tabHolder)
	tabBtn.Size = UDim2.new(1, -10, 0, 40)
	tabBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	tabBtn.Text = tabName
	tabBtn.Font = Enum.Font.GothamBold
	tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabBtn.TextSize = 16
	tabBtn.BorderSizePixel = 0
	Instance.new("UICorner", tabBtn)
	Instance.new("UIStroke", tabBtn).Color = Color3.fromRGB(100, 100, 100)

	local tabPage = Instance.new("ScrollingFrame", contentFrame)
	tabPage.Size = UDim2.new(1, 0, 1, 0)
	tabPage.CanvasSize = UDim2.new(0, 0, 0, 0)
	tabPage.BackgroundTransparency = 1
	tabPage.Visible = false
	tabPage.ScrollBarThickness = 4

	local buttonLayout = Instance.new("UIListLayout", tabPage)
	buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
	buttonLayout.Padding = UDim.new(0, 8)

	tabBtn.MouseButton1Click:Connect(function()
		for _, child in pairs(contentFrame:GetChildren()) do
			if child:IsA("ScrollingFrame") then
				child.Visible = false
			end
		end
		tabPage.Visible = true
	end)

	local tabModule = {}

	-- Add Button
	function tabModule:AddButton(buttonName, callback)
		local button = Instance.new("TextButton", tabPage)
		button.Size = UDim2.new(1, -10, 0, 40)
		button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		button.Text = buttonName
		button.Font = Enum.Font.Gotham
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextSize = 16
		button.BorderSizePixel = 0
		Instance.new("UICorner", button)
		Instance.new("UIStroke", button).Color = Color3.fromRGB(90, 90, 90)

		button.MouseButton1Click:Connect(function()
			pcall(callback)
		end)
	end

	-- Add Toggle
	function tabModule:AddToggle(toggleName, defaultState, callback)
		local toggleFrame = Instance.new("Frame", tabPage)
		toggleFrame.Size = UDim2.new(1, -10, 0, 40)
		toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		toggleFrame.BorderSizePixel = 0
		Instance.new("UICorner", toggleFrame)
		Instance.new("UIStroke", toggleFrame).Color = Color3.fromRGB(90, 90, 90)

		local toggleLabel = Instance.new("TextLabel", toggleFrame)
		toggleLabel.Size = UDim2.new(0.8, 0, 1, 0)
		toggleLabel.Position = UDim2.new(0, 10, 0, 0)
		toggleLabel.BackgroundTransparency = 1
		toggleLabel.Font = Enum.Font.Gotham
		toggleLabel.TextSize = 16
		toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		toggleLabel.Text = toggleName
		toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

		local toggleButton = Instance.new("TextButton", toggleFrame)
		toggleButton.Text = ""
		toggleButton.Size = UDim2.new(0, 30, 0, 30)
		toggleButton.Position = UDim2.new(0.85, 0, 0.15, 0)
		toggleButton.BackgroundColor3 = defaultState and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(150, 0, 0)
		toggleButton.BorderSizePixel = 0
		toggleButton.AutoButtonColor = false
		Instance.new("UICorner", toggleButton)

		local toggled = defaultState or false

		local function updateToggle()
			if toggled then
				toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
				toggleButton.Text = "On"
			else
				toggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
				toggleButton.Text = "Off"
			end
		end

		toggleButton.MouseButton1Click:Connect(function()
			toggled = not toggled
			updateToggle()
			pcall(callback, toggled)
		end)

		updateToggle()
	end

	-- Add Slider (fixed)
	function tabModule:AddSlider(sliderName, minValue, maxValue, defaultValue, callback)
		local sliderFrame = Instance.new("Frame", tabPage)
		sliderFrame.Size = UDim2.new(1, -10, 0, 50)
		sliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		sliderFrame.BorderSizePixel = 0
		Instance.new("UICorner", sliderFrame)
		Instance.new("UIStroke", sliderFrame).Color = Color3.fromRGB(90, 90, 90)

		local sliderLabel = Instance.new("TextLabel", sliderFrame)
		sliderLabel.Size = UDim2.new(0.75, 0, 0.5, 0)
		sliderLabel.Position = UDim2.new(0, 10, 0, 5)
		sliderLabel.BackgroundTransparency = 1
		sliderLabel.Font = Enum.Font.Gotham
		sliderLabel.TextSize = 16
		sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		sliderLabel.Text = sliderName
		sliderLabel.TextXAlignment = Enum.TextXAlignment.Left

		local valueLabel = Instance.new("TextLabel", sliderFrame)
		valueLabel.Size = UDim2.new(0.2, -10, 0.5, 0)
		valueLabel.Position = UDim2.new(0.8, 0, 0, 5)
		valueLabel.BackgroundTransparency = 1
		valueLabel.Font = Enum.Font.Gotham
		valueLabel.TextSize = 16
		valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		valueLabel.Text = tostring(defaultValue)
		valueLabel.TextXAlignment = Enum.TextXAlignment.Right

		local sliderBar = Instance.new("Frame", sliderFrame)
		sliderBar.Size = UDim2.new(0.9, -20, 0, 10)
		sliderBar.Position = UDim2.new(0, 10, 1, -20)
		sliderBar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		Instance.new("UICorner", sliderBar)

		local sliderFill = Instance.new("Frame", sliderBar)
		sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
		sliderFill.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
		Instance.new("UICorner", sliderFill)

		local dragging = false

		local function updateValue(x)
			local relativeX = math.clamp(x - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
			local percent = relativeX / sliderBar.AbsoluteSize.X
			local newValue = math.floor(minValue + (maxValue - minValue) * percent)
			sliderFill.Size = UDim2.new(percent, 0, 1, 0)
			valueLabel.Text = tostring(newValue)
			pcall(callback, newValue)
		end

		sliderBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				updateValue(input.Position.X)
			end
		end)

		sliderBar.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = false
			end
		end)

		-- Listen to InputChanged on sliderBar and UserInputService for smooth dragging (supports mouse and touch)
		sliderBar.InputChanged:Connect(function(input)
			if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				updateValue(input.Position.X)
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
				updateValue(input.Position.X)
			end
		end)
	end

	-- Add Dropdown
	function tabModule:AddDropdown(dropdownName, options, defaultOption, callback)
		local dropdownFrame = Instance.new("Frame", tabPage)
		dropdownFrame.Size = UDim2.new(1, -10, 0, 50)
		dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		dropdownFrame.BorderSizePixel = 0
		Instance.new("UICorner", dropdownFrame)
		Instance.new("UIStroke", dropdownFrame).Color = Color3.fromRGB(90, 90, 90)

		local dropdownLabel = Instance.new("TextLabel", dropdownFrame)
		dropdownLabel.Size = UDim2.new(0.5, 0, 1, 0)
		dropdownLabel.Position = UDim2.new(0, 10, 0, 0)
		dropdownLabel.BackgroundTransparency = 1
		dropdownLabel.Font = Enum.Font.Gotham
		dropdownLabel.TextSize = 16
		dropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		dropdownLabel.Text = dropdownName
		dropdownLabel.TextXAlignment = Enum.TextXAlignment.Left

		local selectedOption = defaultOption or options[1]
		local dropdownButton = Instance.new("TextButton", dropdownFrame)
		dropdownButton.Size = UDim2.new(0.45, -10, 0, 40)
		dropdownButton.Position = UDim2.new(0.5, 0, 0.1, 0)
		dropdownButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		dropdownButton.Text = tostring(selectedOption)
		dropdownButton.Font = Enum.Font.Gotham
		dropdownButton.TextSize = 16
		dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		dropdownButton.BorderSizePixel = 0
		Instance.new("UICorner", dropdownButton)

		local dropdownList = Instance.new("Frame", dropdownFrame)
		dropdownList.Size = UDim2.new(1, 0, 0, #options * 30)
		dropdownList.Position = UDim2.new(0, 0, 1, 5)
		dropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		dropdownList.Visible = false
		Instance.new("UICorner", dropdownList)
		Instance.new("UIStroke", dropdownList).Color = Color3.fromRGB(80, 80, 80)

		local listLayout = Instance.new("UIListLayout", dropdownList)
		listLayout.SortOrder = Enum.SortOrder.LayoutOrder

		for i, option in ipairs(options) do
			local optionBtn = Instance.new("TextButton", dropdownList)
			optionBtn.Size = UDim2.new(1, 0, 0, 30)
			optionBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			optionBtn.Text = tostring(option)
			optionBtn.Font = Enum.Font.Gotham
			optionBtn.TextSize = 14
			optionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
			optionBtn.BorderSizePixel = 0
			Instance.new("UICorner", optionBtn)

			optionBtn.MouseButton1Click:Connect(function()
				selectedOption = option
				dropdownButton.Text = tostring(option)
				dropdownList.Visible = false
				pcall(callback, option)
			end)
		end

		dropdownButton.MouseButton1Click:Connect(function()
			dropdownList.Visible = not dropdownList.Visible
		end)
	end

	-- Add Player Input + Avatar Preview (Improved layout)
	function tabModule:AddPlayerInput()
		local inputFrame = Instance.new("Frame", tabPage)
		inputFrame.Size = UDim2.new(1, -10, 0, 150)
		inputFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		inputFrame.BorderSizePixel = 0
		Instance.new("UICorner", inputFrame)
		Instance.new("UIStroke", inputFrame).Color = Color3.fromRGB(90, 90, 90)

		local inputLabel = Instance.new("TextLabel", inputFrame)
		inputLabel.Size = UDim2.new(1, -110, 0, 25)
		inputLabel.Position = UDim2.new(0, 0, 0, 5)
		inputLabel.BackgroundTransparency = 1
		inputLabel.Font = Enum.Font.Gotham
		inputLabel.TextSize = 16
		inputLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		inputLabel.Text = "Enter Player Name:"
		inputLabel.TextXAlignment = Enum.TextXAlignment.Left

		local textBox = Instance.new("TextBox", inputFrame)
		textBox.Size = UDim2.new(1, -110, 0, 30)
		textBox.Position = UDim2.new(0, 0, 0, 35)
		textBox.ClearTextOnFocus = false
		textBox.Text = ""
		textBox.Font = Enum.Font.Gotham
		textBox.TextSize = 18
		textBox.TextColor3 = Color3.fromRGB(0, 0, 0)
		textBox.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
		textBox.PlaceholderText = "Player name..."
		Instance.new("UICorner", textBox)

		local applyButton = Instance.new("TextButton", inputFrame)
		applyButton.Size = UDim2.new(1, -110, 0, 30)
		applyButton.Position = UDim2.new(0, 0, 0, 75)
		applyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
		applyButton.Text = "Apply"
		applyButton.Font = Enum.Font.GothamBold
		applyButton.TextSize = 18
		applyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		applyButton.BorderSizePixel = 0
		Instance.new("UICorner", applyButton)

		local avatarPreview = Instance.new("ImageLabel", inputFrame)
		avatarPreview.Size = UDim2.new(0, 100, 0, 100)
		avatarPreview.Position = UDim2.new(1, -100, 0, 25)
		avatarPreview.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		avatarPreview.BorderSizePixel = 0
		Instance.new("UICorner", avatarPreview)
		Instance.new("UIStroke", avatarPreview).Color = Color3.fromRGB(70, 70, 70)

		applyButton.MouseButton1Click:Connect(function()
			local targetName = textBox.Text:lower()
			local targetPlayer = nil
			-- Search player by partial name (case insensitive)
			for _, p in ipairs(Players:GetPlayers()) do
				if p.Name:lower():sub(1, #targetName) == targetName then
					targetPlayer = p
                        _G.ActiveTarget = p
					break
				end
			end

			if targetPlayer then
				avatarPreview.Image = "rbxthumb://type=AvatarHeadShot&id="..targetPlayer.UserId.."&w=100&h=100"
			else
				avatarPreview.Image = ""
				print("Player not found")
			end
		end)
	end

	return tabModule
end

return Tabs
